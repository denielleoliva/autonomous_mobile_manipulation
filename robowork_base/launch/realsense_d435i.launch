<launch>
  <arg name="camera" default="d435i"/>
  <arg name="serial_no" default="919122071649"/>

  <arg name="tf_prefix" default="$(arg camera)"/>
  <arg name="manager" default="realsense2_camera_manager"/>

<!--
  ###### When passed to enable stream, librealsense will try to provide best suited format
  RS2_FORMAT_ANY = 0
  ###### 16-bit linear depth values. The depth is meters is equal to depth scale * pixel value.
  RS2_FORMAT_Z16 = 1
  ###### 16-bit float-point disparity values. Depth->Disparity conversion : Disparity = Baseline*FocalLength/Depth.
  RS2_FORMAT_DISPARITY16 = 2
  ###### 32-bit floating point 3D coordinates.
  RS2_FORMAT_XYZ32F = 3
  ###### 32-bit y0, u, y1, v data for every two pixels. Similar to YUV422 but packed in a different order - https://en.wikipedia.org/wiki/YUV
  RS2_FORMAT_YUYV = 4
  ###### 8-bit red, green and blue channels
  RS2_FORMAT_RGB8 = 5
  ###### 8-bit blue, green, and red channels - suitable for OpenCV
  RS2_FORMAT_BGR8 = 6
  ###### 8-bit red, green and blue channels + constant alpha channel equal to FF
  RS2_FORMAT_RGBA8 = 7
  ###### 8-bit blue, green, and red channels + constant alpha channel equal to FF
  RS2_FORMAT_BGRA8 = 8
  ###### 8-bit per-pixel grayscale image
  RS2_FORMAT_Y8 = 9
  ###### 16-bit per-pixel grayscale image
  RS2_FORMAT_Y16 = 10
  ###### Four 10-bit luminance values encoded into a 5-byte macropixel
  RS2_FORMAT_RAW10 = 11
  ###### 16-bit raw image
  RS2_FORMAT_RAW16 = 12
  ###### 8-bit raw image
  RS2_FORMAT_RAW8 = 13
  ###### Similar to the standard YUYV pixel format, but packed in a different order
  RS2_FORMAT_UYVY = 14
  ###### Raw data from the motion sensor
  RS2_FORMAT_MOTION_RAW = 15
  ###### Motion data packed as 3 32-bit float values, for X, Y, and Z axis
  RS2_FORMAT_MOTION_XYZ32F = 16
  ###### Raw data from the external sensors hooked to one of the GPIO's
  RS2_FORMAT_GPIO_RAW = 17
  ###### Pose data packed as floats array, containing translation vector, rotation quaternion and prediction velocities and accelerations vectors
  RS2_FORMAT_6DOF = 18
  ###### 32-bit float-point disparity values. Depth->Disparity conversion : Disparity = Baseline*FocalLength/Depth
  RS2_FORMAT_DISPARITY32 = 19 -->

  <arg name="json_file_path" default=""/>

  <arg name="fisheye_width" default="640"/>
  <arg name="fisheye_height" default="480"/>
  <arg name="fisheye_format" default="9"/> <!-- MONO8 -->
  <arg name="fisheye_fps" default="30"/>
  <arg name="enable_fisheye" default="false"/>

  <arg name="depth_width" default="1280"/> <!-- D435 -->
  <arg name="depth_height" default="720"/> <!-- D435 -->
  <arg name="depth_fps" default="15"/>
  <arg name="depth_format" default="0"/> <!-- ANY FORMAT -->
  <arg name="enable_depth" default="false"/>

  <arg name="infra_width" default="640"/> <!-- D435 -->
  <arg name="infra_height" default="480"/> <!-- D435 -->
  <arg name="infra_fps" default="15"/>
  <arg name="infra_format" default="9"/> ###0 <!-- MONO16 -->
  <arg name="enable_infra1" default="true"/>
  <arg name="enable_infra2" default="true"/>

  <arg name="color_width" default="1280"/>
  <arg name="color_height" default="720"/>
  <arg name="color_fps" default="15"/>
  <arg name="color_format" default="7"/> <!-- RGB8 -->
  <arg name="enable_color" default="true"/>

  <arg name="gyro_fps" default="400"/>
  <arg name="accel_fps" default="250"/>
  <arg name="enable_gyro" default="false"/>
  <arg name="enable_accel" default="false"/>

  <arg name="enable_pointcloud" default="false"/>
  <arg name="enable_sync" default="false"/>
  <arg name="align_depth" default="false"/>
  <arg name="filters" default=""/>

  <arg name="clip_distance"         default="-2"/>
  <arg name="linear_accel_cov"      default="0.01"/>
  <arg name="initial_reset"         default="false"/>
  <arg name="unite_imu_method"      default=""/>

  <arg name="enable_emitter" default="false"/>

  <!-- For certain configurations of streams, there is no calibration available,
       therefore the camera info cannot be published! -->
  <arg name="publish_camera_info" default="false"/>

  <!-- rgbd_launch specific arguments -->

  <!-- Arguments for remapping all device namespaces -->
  <arg name="rgb" default="color"/>
  <arg name="ir" default="infra1"/>
  <arg name="depth" default="depth"/>
  <arg name="depth_registered_pub" default="depth_registered"/>
  <arg name="depth_registered" default="depth_registered" unless="$(arg align_depth)"/>
  <arg name="depth_registered" default="aligned_depth_to_color" if="$(arg align_depth)"/>
  <arg name="depth_registered_filtered" default="$(arg depth_registered)"/>
  <arg name="projector" default="projector"/>

  <!-- Disable bond topics by default -->
  <arg name="bond" default="false"/>
  <arg name="respawn" default="$(arg bond)"/>

  <!-- Processing Modules -->
  <arg name="rgb_processing" default="true"/>
  <arg name="debayer_processing" default="false"/>
  <arg name="ir_processing" default="false"/>
  <arg name="depth_processing" default="false"/>
  <arg name="depth_registered_processing" default="true"/>
  <arg name="disparity_processing" default="false"/>
  <arg name="disparity_registered_processing" default="false"/>
  <arg name="hw_registered_processing" default="$(arg align_depth)"/>
  <arg name="sw_registered_processing" default="true" unless="$(arg align_depth)"/>
  <arg name="sw_registered_processing" default="false" if="$(arg align_depth)"/>

  <group ns="$(arg camera)">

    <!-- Launch the camera device nodelet-->
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="manager" value="$(arg manager)"/>
      <arg name="tf_prefix" value="$(arg tf_prefix)"/>
      <arg name="serial_no" value="$(arg serial_no)"/>
      <arg name="json_file_path" value="$(arg json_file_path)"/>

      <arg name="enable_pointcloud" value="$(arg enable_pointcloud)"/>
      <arg name="enable_sync" value="$(arg enable_sync)"/>
      <arg name="align_depth" value="$(arg align_depth)"/>

      <arg name="fisheye_width" value="$(arg fisheye_width)"/>
      <arg name="fisheye_height" value="$(arg fisheye_height)"/>
      <arg name="fisheye_format" value="$(arg fisheye_format)"/>
      <arg name="enable_fisheye" value="$(arg enable_fisheye)"/>

      <arg name="depth_width" value="$(arg depth_width)"/>
      <arg name="depth_height" value="$(arg depth_height)"/>
      <arg name="depth_format" value="$(arg depth_format)"/>
      <arg name="enable_depth" value="$(arg enable_depth)"/>

      <arg name="color_width" value="$(arg color_width)"/>
      <arg name="color_height" value="$(arg color_height)"/>
      <arg name="color_format" value="$(arg color_format)"/>
      <arg name="enable_color" value="$(arg enable_color)"/>

      <arg name="infra_width" value="$(arg infra_width)"/>
      <arg name="infra_height" value="$(arg infra_height)"/>
      <arg name="infra_format" value="$(arg infra_format)"/>
      <arg name="enable_infra1" value="$(arg enable_infra1)"/>
      <arg name="enable_infra2" value="$(arg enable_infra2)"/>

      <arg name="fisheye_fps" value="$(arg fisheye_fps)"/>
      <arg name="depth_fps" value="$(arg depth_fps)"/>
      <arg name="infra_fps" value="$(arg infra_fps)"/>
      <arg name="color_fps" value="$(arg color_fps)"/>
      <arg name="gyro_fps" value="$(arg gyro_fps)"/>
      <arg name="accel_fps" value="$(arg accel_fps)"/>
      <arg name="enable_gyro" value="$(arg enable_gyro)"/>
      <arg name="enable_accel" value="$(arg enable_accel)"/>
      <arg name="filters" value="$(arg filters)"/>

      <arg name="clip_distance"            value="$(arg clip_distance)"/>
      <arg name="linear_accel_cov"         value="$(arg linear_accel_cov)"/>
      <arg name="initial_reset"            value="$(arg initial_reset)"/>
      <arg name="unite_imu_method"         value="$(arg unite_imu_method)"/>

      <arg name="enable_emitter" default="$(arg enable_emitter)"/>
      <arg name="publish_camera_info" default="$(arg publish_camera_info)"/>
    </include>

    <!-- RGB processing -->
    <include if="$(arg rgb_processing)" file="$(find rgbd_launch)/launch/includes/rgb.launch.xml">
      <arg name="manager" value="$(arg manager)"/>
      <arg name="respawn" value="$(arg respawn)"/>
      <arg name="rgb" value="$(arg rgb)"/>
      <arg name="debayer_processing" value="$(arg debayer_processing)"/>
    </include>

    <group if="$(eval depth_registered_processing and sw_registered_processing)">
      <node pkg="nodelet" type="nodelet" name="register_depth" args="load depth_image_proc/register $(arg manager) $(arg bond)" respawn="$(arg respawn)">
        <remap from="rgb/camera_info" to="$(arg rgb)/camera_info"/>
        <remap from="depth/camera_info" to="$(arg depth)/camera_info"/>
        <remap from="depth/image_rect" to="$(arg depth)/image_rect_raw"/>
        <remap from="depth_registered/image_rect" to="$(arg depth_registered)/sw_registered/image_rect_raw"/>
      </node>

      <!-- Publish registered XYZRGB point cloud with software registered input -->
      <node pkg="nodelet" type="nodelet" name="points_xyzrgb_sw_registered" args="load depth_image_proc/point_cloud_xyzrgb $(arg manager) $(arg bond)" respawn="$(arg respawn)">
        <remap from="rgb/image_rect_color" to="$(arg rgb)/image_rect_color"/>
        <remap from="rgb/camera_info" to="$(arg rgb)/camera_info"/>
        <remap from="depth_registered/image_rect" to="$(arg depth_registered_filtered)/sw_registered/image_rect_raw"/>
        <remap from="depth_registered/points" to="$(arg depth_registered)/points"/>
      </node>
    </group>

    <group if="$(eval depth_registered_processing and hw_registered_processing)">
      <!-- Publish registered XYZRGB point cloud with hardware registered input (ROS Realsense depth alignment) -->
      <node pkg="nodelet" type="nodelet" name="points_xyzrgb_hw_registered" args="load depth_image_proc/point_cloud_xyzrgb $(arg manager) $(arg bond)" respawn="$(arg respawn)">
        <remap from="rgb/image_rect_color" to="$(arg rgb)/image_rect_color"/>
        <remap from="rgb/camera_info" to="$(arg rgb)/camera_info"/>
        <remap from="depth_registered/image_rect" to="$(arg depth_registered)/image_raw"/>
        <remap from="depth_registered/points" to="$(arg depth_registered_pub)/points"/>
      </node>
    </group>

  </group>

</launch>
